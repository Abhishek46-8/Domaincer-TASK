{"version":3,"sources":["component/Welcome.js","lib/isAuth.js","component/Navbar.js","lib/PasswordInput.js","lib/EmailInput.js","lib/apiList.js","component/Login.js","component/Logout.js","lib/FileUploadInput.js","component/Signup.js","component/Home.js","component/Applications.js","component/Profile.js","component/recruiter/CreateJobs.js","component/recruiter/MyJobs.js","component/recruiter/JobApplications.js","component/recruiter/AcceptedApplicants.js","component/recruiter/Profile.js","lib/MessagePopup.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorPage","props","Grid","container","item","direction","alignItems","justify","style","padding","minHeight","Typography","variant","Welcome","userType","localStorage","getItem","isAuth","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","history","useHistory","handleClick","location","console","log","push","AppBar","position","Toolbar","className","Button","color","onClick","PasswordInput","useState","showPassword","setShowPassword","FormControl","error","InputLabel","htmlFor","label","OutlinedInput","id","type","endAdornment","InputAdornment","IconButton","onMouseDown","event","preventDefault","edge","value","onChange","labelWidth","onBlur","helperText","FormHelperText","EmailInput","inputErrorHandler","handleInputError","required","TextField","email","message","target","test","String","toLowerCase","server","apiList","login","signup","uploadResume","uploadProfileImage","jobs","applications","rating","user","applicants","body","inputBox","width","submitButton","Login","setPopup","useContext","SetPopupContext","loggedin","setLoggedin","password","loginDetails","setLoginDetails","setInputErrorHandler","handleInput","key","to","Paper","elevation","component","status","Object","keys","some","obj","open","severity","axios","post","then","response","setItem","data","token","catch","err","Logout","useEffect","removeItem","FileUploadInput","uploadTo","identifier","file","setFile","uploadPercentage","setUploadPercentage","xs","height","icon","display","files","name","InputProps","readOnly","FormData","append","Axios","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","url","statusText","handleUpload","disabled","CloudUpload","marginTop","LinearProgress","MultifieldInput","education","setEducation","map","paddingLeft","paddingRight","institutionName","newEdu","startYear","endYear","skills","resume","profile","bio","contactNumber","signupDetails","setSignupDetails","phone","setPhone","untouched","select","MenuItem","chips","multiline","rows","split","filter","n","length","country","tmpErrorHandler","forEach","toUpperCase","substr","updatedDetails","trim","handleLogin","verified","handleLoginRecruiter","button","jobTileOuter","margin","boxSizing","popupDialog","justifyContent","JobTile","job","setOpen","sop","setSop","handleClose","deadline","Date","toLocaleDateString","Rating","jobType","salary","duration","recruiter","skillsets","skill","Chip","Modal","onClose","outline","flexDirection","minWidth","marginBottom","_id","Authorization","FilterPopup","searchOptions","setSearchOptions","getData","FormControlLabel","control","Checkbox","checked","fullTime","partTime","wfh","fullWidth","border","borderRadius","sort","for","desc","Home","setJobs","filterOpen","setFilterOpen","query","searchParams","asc","queryString","join","address","get","today","onKeyPress","ev","textAlign","statusBlock","textTransform","ApplicationTile","application","setRating","appliedOn","dateOfApplication","joinedOn","dateOfJoining","fetchRating","background","applied","shortlisted","accepted","rejected","deleted","cancelled","finished","newValue","put","jobId","Applications","setApplications","alignSelf","Profile","profileDetails","setProfileDetails","edu","onAdd","chip","onDelete","index","splice","handleUpdate","CreateJobs","maxApplicants","maxPositions","getTime","toISOString","jobDetails","setJobDetails","inputProps","min","InputLabelProps","shrink","openUpdate","setOpenUpdate","handleCloseUpdate","postedOn","dateOfPosting","acceptedCandidates","delete","Slider","valueLabelDisplay","valueLabelFormat","marks","MyJobs","avatar","colorSet","updateStatus","statusData","buttonSet","Avatar","src","jobApplicant","method","responseType","Blob","fileURL","URL","createObjectURL","window","getResume","JobApplications","useParams","all","openEndJob","setOpenEndJob","handleCloseEndJob","applicantId","userId","AcceptedApplicants","MessagePopup","reason","Snackbar","autoHideDuration","Alert","paddingTop","createContext","App","popup","Provider","exact","path","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb79f530.chunk.js","sourcesContent":["import { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst Welcome = (props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Welcome to Domaincer Job Website</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const ErrorPage = (props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Error 404</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","const isAuth = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\nexport const userType = () => {\r\n  return localStorage.getItem(\"type\");\r\n};\r\n\r\nexport default isAuth;\r\n","import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport isAuth, { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const handleClick = (location) => {\r\n    console.log(location);\r\n    history.push(location);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Domaincer Job Website\r\n        </Typography>\r\n        {isAuth() ? (\r\n          userType() === \"recruiter\" ? (\r\n            <>\r\n              \r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/addjob\")}>\r\n                Post a Job\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/myjobs\")}>\r\n                My Jobs\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/employees\")}>\r\n                Selected Candidates\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\r\n                Profile\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\r\n                Home\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                onClick={() => handleClick(\"/applications\")}\r\n              >\r\n                Applications\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\r\n                Profile\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <Button color=\"inherit\" onClick={() => handleClick(\"/login\")}>\r\n              Login\r\n            </Button>\r\n            <Button color=\"inherit\" onClick={() => handleClick(\"/signup\")}>\r\n              Signup\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst PasswordInput = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl variant=\"outlined\" error={props.error ? props.error : null}>\r\n        <InputLabel htmlFor=\"outlined-adornment-password\">\r\n          {props.label}\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"outlined-adornment-password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                onClick={handleShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                edge=\"end\"\r\n              >\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          value={props.value}\r\n          onChange={(event) => props.onChange(event)}\r\n          labelWidth={props.labelWidth ? props.labelWidth : 70}\r\n          className={props.className}\r\n          onBlur={props.onBlur ? props.onBlur : null}\r\n        />\r\n        {props.helperText ? (\r\n          <FormHelperText>{props.helperText}</FormHelperText>\r\n        ) : null}\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordInput;\r\n","import { TextField } from \"@material-ui/core\";\r\n\r\nconst EmailInput = (props) => {\r\n  const {\r\n    label,\r\n    value,\r\n    onChange,\r\n    inputErrorHandler,\r\n    handleInputError,\r\n    required,\r\n    className,\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      variant=\"outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      helperText={inputErrorHandler.email.message}\r\n      onBlur={(event) => {\r\n        if (event.target.value === \"\") {\r\n          if (required) {\r\n            handleInputError(\"email\", true, \"Email is required\");\r\n          } else {\r\n            handleInputError(\"email\", false, \"\");\r\n          }\r\n        } else {\r\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n          if (re.test(String(event.target.value).toLowerCase())) {\r\n            handleInputError(\"email\", false, \"\");\r\n          } else {\r\n            handleInputError(\"email\", true, \"Incorrect email format\");\r\n          }\r\n        }\r\n      }}\r\n      error={inputErrorHandler.email.error}\r\n      className={className}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmailInput;\r\n","export var server = \"https://guarded-coast-10147.herokuapp.com/\";\r\n\r\nconst apiList = {\r\n  login: `${server}auth/login`,\r\n  signup: `${server}auth/signup`,\r\n  uploadResume: `${server}upload/resume`,\r\n  uploadProfileImage: `${server}upload/profile`,\r\n  jobs: `${server}api/jobs`,\r\n  applications: `${server}api/applications`,\r\n  rating: `${server}api/rating`,\r\n  user: `${server}api/user`,\r\n  applicants: `${server}api/applicants`,\r\n};\r\n\r\nexport default apiList;\r\n","import { useContext, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"300px\",\r\n  },\r\n  submitButton: {\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [loginDetails, setLoginDetails] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setLoginDetails({\r\n      ...loginDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\r\n      return inputErrorHandler[obj].error;\r\n    });\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.login, loginDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Login\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={loginDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={loginDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handleLogin()}\r\n            className={classes.submitButton}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst Logout = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"type\");\r\n    setPopup({\r\n      open: true,\r\n      severity: \"success\",\r\n      message: \"Logged out successfully\",\r\n    });\r\n  }, []);\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import { useState, useContext } from \"react\";\r\nimport { Grid, Button, TextField, LinearProgress } from \"@material-ui/core\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\nimport Axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst FileUploadInput = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const { uploadTo, identifier, handleInput } = props;\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const handleUpload = () => {\r\n    console.log(file);\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    Axios.post(uploadTo, data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        setUploadPercentage(\r\n          parseInt(\r\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n          )\r\n        );\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        handleInput(identifier, response.data.url);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.statusText,\r\n          //   message: err.response.data\r\n          //     ? err.response.data.message\r\n          //     : err.response.statusText,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container item xs={12} direction=\"column\" className={props.className}>\r\n      <Grid container item xs={12} spacing={0}>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component=\"label\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            {props.icon}\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(event) => {\r\n                console.log(event.target.files);\r\n                setUploadPercentage(0);\r\n                setFile(event.target.files[0]);\r\n              }}\r\n              // onChange={onChange}\r\n              // onChange={\r\n              //   (e) => {}\r\n              //   //   setSource({ ...source, place_img: e.target.files[0] })\r\n              // }\r\n            />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label={props.label}\r\n            value={file ? file.name || \"\" : \"\"}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n            onClick={() => handleUpload()}\r\n            disabled={file ? false : true}\r\n          >\r\n            <CloudUpload />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {uploadPercentage !== 0 ? (\r\n        <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n          <LinearProgress variant=\"determinate\" value={uploadPercentage} />\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FileUploadInput;\r\n","import { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n  MenuItem,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"400px\",\r\n  },\r\n  submitButton: {\r\n    width: \"400px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.inputBox}\r\n          key={key}\r\n          style={{ paddingLeft: 0, paddingRight: 0 }}\r\n        >\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [signupDetails, setSignupDetails] = useState({\r\n    type: \"applicant\",\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    name: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setSignupDetails({\r\n      ...signupDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        required: true,\r\n        untouched: false,\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLoginRecruiter = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    console.log(updatedDetails);\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Signup\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            select\r\n            label=\"Category\"\r\n            variant=\"outlined\"\r\n            className={classes.inputBox}\r\n            value={signupDetails.type}\r\n            onChange={(event) => {\r\n              handleInput(\"type\", event.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\r\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            label=\"Name\"\r\n            value={signupDetails.name}\r\n            onChange={(event) => handleInput(\"name\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.name.error}\r\n            helperText={inputErrorHandler.name.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"name\", true, \"Name is required\");\r\n              } else {\r\n                handleInputError(\"name\", false, \"\");\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={signupDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n            required={true}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={signupDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.password.error}\r\n            helperText={inputErrorHandler.password.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"password\", true, \"Password is required\");\r\n              } else {\r\n                handleInputError(\"password\", false, \"\");\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        {signupDetails.type === \"applicant\" ? (\r\n          <>\r\n            <MultifieldInput\r\n              education={education}\r\n              setEducation={setEducation}\r\n            />\r\n            <Grid item>\r\n              <ChipInput\r\n                className={classes.inputBox}\r\n                label=\"Skills\"\r\n                variant=\"outlined\"\r\n                helperText=\"Press enter to add skills\"\r\n                onChange={(chips) =>\r\n                  setSignupDetails({ ...signupDetails, skills: chips })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Resume (.pdf)\"\r\n                icon={<DescriptionIcon />}\r\n                \r\n                uploadTo={apiList.uploadResume}\r\n                handleInput={handleInput}\r\n                identifier={\"resume\"}\r\n              />\r\n            </Grid>\r\n            \r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n              <TextField\r\n                label=\"Bio (upto 250 words)\"\r\n                multiline\r\n                rows={8}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"outlined\"\r\n                value={signupDetails.bio}\r\n                onChange={(event) => {\r\n                  if (\r\n                    event.target.value.split(\" \").filter(function (n) {\r\n                      return n != \"\";\r\n                    }).length <= 250\r\n                  ) {\r\n                    handleInput(\"bio\", event.target.value);\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={phone}\r\n                onChange={(phone) => setPhone(phone)}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              signupDetails.type === \"applicant\"\r\n                ? handleLogin()\r\n                : handleLoginRecruiter();\r\n            }}\r\n            className={classes.submitButton}\r\n          >\r\n            Signup\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  const { job } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [sop, setSop] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setSop(\"\");\r\n  };\r\n\r\n  const handleApply = () => {\r\n    console.log(job._id);\r\n    console.log(sop);\r\n    axios\r\n      .post(\r\n        `${apiList.jobs}/${job._id}/applications`,\r\n        {\r\n          sop: sop,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const deadline = new Date(job.deadline).toLocaleDateString();\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Posted By : {job.recruiter.name}</Grid>\r\n          <Grid item>Application Deadline : {deadline}</Grid>\r\n\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n            disabled={userType() === \"recruiter\"}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"50%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TextField\r\n            label=\"Write SOP (upto 250 words)\"\r\n            multiline\r\n            rows={8}\r\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\r\n            variant=\"outlined\"\r\n            value={sop}\r\n            onChange={(event) => {\r\n              if (\r\n                event.target.value.split(\" \").filter(function (n) {\r\n                  return n != \"\";\r\n                }).length <= 250\r\n              ) {\r\n                setSop(event.target.value);\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => handleApply()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={5}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Job Type\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"fullTime\"\r\n                      checked={searchOptions.jobType.fullTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Full Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"partTime\"\r\n                      checked={searchOptions.jobType.partTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Part Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"wfh\"\r\n                      checked={searchOptions.jobType.wfh}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Work From Home\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Duration\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                select\r\n                label=\"Duration\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={searchOptions.duration}\r\n                onChange={(event) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    duration: event.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value=\"0\">All</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"salary\"\r\n                    checked={searchOptions.sort.salary.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"salary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"salary\">\r\n                    <Typography>Salary</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.salary.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            desc: !searchOptions.sort.salary.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.salary.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"duration\"\r\n                    checked={searchOptions.sort.duration.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"duration\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"duration\">\r\n                    <Typography>Duration</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.duration.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            desc: !searchOptions.sort.duration.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.duration.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort.rating.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.rating.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            desc: !searchOptions.sort.rating.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.rating.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Home = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    query: \"\",\r\n    jobType: {\r\n      fullTime: false,\r\n      partTime: false,\r\n      wfh: false,\r\n    },\r\n    salary: [0, 100],\r\n    duration: \"0\",\r\n    sort: {\r\n      salary: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      duration: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      rating: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    if (searchOptions.query !== \"\") {\r\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\r\n    }\r\n    if (searchOptions.jobType.fullTime) {\r\n      searchParams = [...searchParams, `jobType=Full%20Time`];\r\n    }\r\n    if (searchOptions.jobType.partTime) {\r\n      searchParams = [...searchParams, `jobType=Part%20Time`];\r\n    }\r\n    if (searchOptions.jobType.wfh) {\r\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\r\n    }\r\n    if (searchOptions.salary[0] != 0) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.salary[1] != 100) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.duration != \"0\") {\r\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(\r\n          response.data.filter((obj) => {\r\n            const today = new Date();\r\n            const deadline = new Date(obj.deadline);\r\n            return deadline > today;\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">Jobs</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              label=\"Search Jobs\"\r\n              value={searchOptions.query}\r\n              onChange={(event) =>\r\n                setSearchOptions({\r\n                  ...searchOptions,\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === \"Enter\") {\r\n                  getData();\r\n                }\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton onClick={() => getData()}>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ width: \"500px\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={() => setFilterOpen(true)}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        {/* <Grid item>\r\n          <Pagination count={10} color=\"primary\" />\r\n        </Grid> */}\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [rating, setRating] = useState(application.job.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n  const joinedOn = new Date(application.dateOfJoining);\r\n\r\n  const fetchRating = () => {\r\n    axios\r\n      .get(`${apiList.rating}?id=${application.job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setRating(response.data.rating);\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, jobId: application.job._id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{application.job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\r\n          <Grid item>Role : {application.job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {application.job.duration !== 0\r\n              ? `${application.job.duration} month`\r\n              : `Flexible`}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Paper\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: colorSet[application.status],\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {application.status}\r\n            </Paper>\r\n          </Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.statusBlock}\r\n                onClick={() => {\r\n                  fetchRating();\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Rate Job\r\n              </Button>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst Applications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.applications, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Applications</Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs\r\n        direction=\"column\"\r\n        style={{ width: \"100%\" }}\r\n        alignItems=\"stretch\"\r\n        justify=\"center\"\r\n      >\r\n        {applications.length > 0 ? (\r\n          applications.map((obj) => (\r\n            <Grid item>\r\n              <ApplicationTile application={obj} />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n            No Applications Found\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid item container className={classes.inputBox} key={key}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item style={{ alignSelf: \"center\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [userData, setUserData] = useState();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n  });\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        if (response.data.education.length > 0) {\r\n          setEducation(\r\n            response.data.education.map((edu) => ({\r\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\r\n              startYear: edu.startYear ? edu.startYear : \"\",\r\n              endYear: edu.endYear ? edu.endYear : \"\",\r\n            }))\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const editDetails = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <MultifieldInput\r\n                education={education}\r\n                setEducation={setEducation}\r\n              />\r\n              <Grid item>\r\n                <ChipInput\r\n                  className={classes.inputBox}\r\n                  label=\"Skills\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Press enter to add skills\"\r\n                  value={profileDetails.skills}\r\n                  onAdd={(chip) =>\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: [...profileDetails.skills, chip],\r\n                    })\r\n                  }\r\n                  onDelete={(chip, index) => {\r\n                    let skills = profileDetails.skills;\r\n                    skills.splice(index, 1);\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: skills,\r\n                    });\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Resume (.pdf)\"\r\n                  icon={<DescriptionIcon />}\r\n                  uploadTo={apiList.uploadResume}\r\n                  handleInput={handleInput}\r\n                  identifier={\"resume\"}\r\n                />\r\n              </Grid>\r\n              \r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Modal open={open} onClose={handleClose} className={classes.popupDialog}> */}\r\n\r\n      {/* </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst CreateJobs = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [jobDetails, setJobDetails] = useState({\r\n    title: \"\",\r\n    maxApplicants: 100,\r\n    maxPositions: 30,\r\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n      .toISOString()\r\n      .substr(0, 16),\r\n    skillsets: [],\r\n    jobType: \"Full Time\",\r\n    duration: 0,\r\n    salary: 0,\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(jobDetails);\r\n    axios\r\n      .post(apiList.jobs, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        setJobDetails({\r\n          title: \"\",\r\n          maxApplicants: 100,\r\n          maxPositions: 30,\r\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n            .toISOString()\r\n            .substr(0, 16),\r\n          skillsets: [],\r\n          jobType: \"Full Time\",\r\n          duration: 0,\r\n          salary: 0,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Add Job</Typography>\r\n        </Grid>\r\n        <Grid item container xs direction=\"column\" justify=\"center\">\r\n          <Grid item>\r\n            <Paper\r\n              style={{\r\n                padding: \"20px\",\r\n                outline: \"none\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"stretch\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Title\"\r\n                    value={jobDetails.title}\r\n                    onChange={(event) =>\r\n                      handleInput(\"title\", event.target.value)\r\n                    }\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <ChipInput\r\n                    className={classes.inputBox}\r\n                    label=\"Skills\"\r\n                    variant=\"outlined\"\r\n                    helperText=\"Press enter to add skills\"\r\n                    value={jobDetails.skillsets}\r\n                    onAdd={(chip) =>\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: [...jobDetails.skillsets, chip],\r\n                      })\r\n                    }\r\n                    onDelete={(chip, index) => {\r\n                      let skillsets = jobDetails.skillsets;\r\n                      skillsets.splice(index, 1);\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: skillsets,\r\n                      });\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Job Type\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.jobType}\r\n                    onChange={(event) => {\r\n                      handleInput(\"jobType\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\r\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\r\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                \r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Salary\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.salary}\r\n                    onChange={(event) => {\r\n                      handleInput(\"salary\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 0 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Application Deadline\"\r\n                    type=\"datetime-local\"\r\n                    value={jobDetails.deadline}\r\n                    onChange={(event) => {\r\n                      handleInput(\"deadline\", event.target.value);\r\n                    }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Maximum Number Of Applicants\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxApplicants}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxApplicants\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Positions Available\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxPositions}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxPositions\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n                onClick={() => handleUpdate()}\r\n              >\r\n                Create Job\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateJobs;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { job, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n  const [jobDetails, setJobDetails] = useState(job);\r\n\r\n  console.log(jobDetails);\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleClick = (location) => {\r\n    history.push(location);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(job._id);\r\n    axios\r\n      .delete(`${apiList.jobs}/${job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const handleJobUpdate = () => {\r\n    axios\r\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleCloseUpdate();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleCloseUpdate();\r\n      });\r\n  };\r\n\r\n  const postedOn = new Date(job.dateOfPosting);\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\r\n          <Grid item>\r\n            Remaining Number of Positions:{\" \"}\r\n            {job.maxPositions - job.acceptedCandidates}\r\n          </Grid>\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\r\n            >\r\n              View Applications\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpenUpdate(true);\r\n              }}\r\n              style={{\r\n                background: \"#FC7A1E\",\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Delete Job\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleDelete()}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleClose()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openUpdate}\r\n        onClose={handleCloseUpdate}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Update Details\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            spacing={3}\r\n            style={{ margin: \"10px\" }}\r\n          >\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Application Deadline\"\r\n                type=\"datetime-local\"\r\n                value={jobDetails.deadline.substr(0, 16)}\r\n                onChange={(event) => {\r\n                  handleInput(\"deadline\", event.target.value);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Maximum Number Of Applicants\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxApplicants}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxApplicants\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Positions Available\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxPositions}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxPositions\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleJobUpdate()}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseUpdate()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Job Type\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"fullTime\"\r\n                      checked={searchOptions.jobType.fullTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Full Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"partTime\"\r\n                      checked={searchOptions.jobType.partTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Part Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"wfh\"\r\n                      checked={searchOptions.jobType.wfh}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Work From Home\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Salary\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Slider\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => {\r\n                  return value * (100000 / 100);\r\n                }}\r\n                marks={[\r\n                  { value: 0, label: \"0\" },\r\n                  { value: 100, label: \"100000\" },\r\n                ]}\r\n                value={searchOptions.salary}\r\n                onChange={(event, value) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    salary: value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Duration\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                select\r\n                label=\"Duration\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={searchOptions.duration}\r\n                onChange={(event) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    duration: event.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value=\"0\">All</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"salary\"\r\n                    checked={searchOptions.sort.salary.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"salary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"salary\">\r\n                    <Typography>Salary</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.salary.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            desc: !searchOptions.sort.salary.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.salary.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"duration\"\r\n                    checked={searchOptions.sort.duration.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"duration\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"duration\">\r\n                    <Typography>Duration</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.duration.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            desc: !searchOptions.sort.duration.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.duration.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort.rating.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.rating.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            desc: !searchOptions.sort.rating.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.rating.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst MyJobs = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    query: \"\",\r\n    jobType: {\r\n      fullTime: false,\r\n      partTime: false,\r\n      wfh: false,\r\n    },\r\n    salary: [0, 100],\r\n    duration: \"0\",\r\n    sort: {\r\n      salary: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      duration: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      rating: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [`myjobs=1`];\r\n    if (searchOptions.query !== \"\") {\r\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\r\n    }\r\n    if (searchOptions.jobType.fullTime) {\r\n      searchParams = [...searchParams, `jobType=Full%20Time`];\r\n    }\r\n    if (searchOptions.jobType.partTime) {\r\n      searchParams = [...searchParams, `jobType=Part%20Time`];\r\n    }\r\n    if (searchOptions.jobType.wfh) {\r\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\r\n    }\r\n    if (searchOptions.salary[0] != 0) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.salary[1] != 100) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.duration != \"0\") {\r\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">My Jobs</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              label=\"Search Jobs\"\r\n              value={searchOptions.query}\r\n              onChange={(event) =>\r\n                setSearchOptions({\r\n                  ...searchOptions,\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === \"Enter\") {\r\n                  getData();\r\n                }\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton onClick={() => getData()}>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ width: \"500px\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={() => setFilterOpen(true)}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} getData={getData} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyJobs;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfApplication\"\r\n                    checked={searchOptions.sort.dateOfApplication.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfApplication\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfApplication\">\r\n                    <Typography>Date of Application</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfApplication.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            desc: !searchOptions.sort.dateOfApplication.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfApplication.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const buttonSet = {\r\n    applied: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"shortlisted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"shortlisted\")}\r\n          >\r\n            Shortlist\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    shortlisted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"accepted\")}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    rejected: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Rejected\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    accepted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Accepted\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    cancelled: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"cancelled\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Cancelled\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    finished: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"finished\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Finished\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            Education:{\" \"}\r\n            {application.jobApplicant.education\r\n              .map((edu) => {\r\n                return `${edu.institutionName} (${edu.startYear}-${\r\n                  edu.endYear ? edu.endYear : \"Ongoing\"\r\n                })`;\r\n              })\r\n              .join(\", \")}\r\n          </Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {buttonSet[application.status]}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            // onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst JobApplications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const { jobId } = useParams();\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    status: {\r\n      all: false,\r\n      applied: false,\r\n      shortlisted: false,\r\n    },\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfApplication: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n\r\n    if (searchOptions.status.rejected) {\r\n      searchParams = [...searchParams, `status=rejected`];\r\n    }\r\n    if (searchOptions.status.applied) {\r\n      searchParams = [...searchParams, `status=applied`];\r\n    }\r\n    if (searchOptions.status.shortlisted) {\r\n      searchParams = [...searchParams, `status=shortlisted`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}?jobId=${jobId}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}&${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Applications</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobApplications;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          \r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"jobTitle\"\r\n                    checked={searchOptions.sort[\"job.title\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"jobTitle\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"jobTitle\">\r\n                    <Typography>Job Title</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"job.title\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            desc: !searchOptions.sort[\"job.title\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"job.title\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfJoining\"\r\n                    checked={searchOptions.sort.dateOfJoining.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfJoining\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfJoining\">\r\n                    <Typography>Date of Joining</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfJoining.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            desc: !searchOptions.sort.dateOfJoining.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfJoining.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [openEndJob, setOpenEndJob] = useState(false);\r\n  const [rating, setRating] = useState(application.jobApplicant.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, applicantId: application.jobApplicant.userId },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEndJob = () => {\r\n    setOpenEndJob(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleCloseEndJob();\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n        handleCloseEndJob();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Job Title: {application.job.title}</Grid>\r\n          <Grid item>Role: {application.job.jobType}</Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {/* {buttonSet[application.status]} */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: \"#09BC8A\",\r\n              }}\r\n              onClick={() => {\r\n                setOpenEndJob(true);\r\n              }}\r\n            >\r\n              End Job\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Rate Applicant\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openEndJob}\r\n        onClose={handleCloseEndJob}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => {\r\n                  updateStatus(\"finished\");\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseEndJob()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst AcceptedApplicants = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      \"job.title\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfJoining: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    searchParams = [...searchParams, `status=accepted`];\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Employees</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AcceptedApplicants;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        setPhone(response.data.contactNumber);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs style={{ width: \"100%\" }}>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              //   width: \"60%\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Bio (upto 250 words)\"\r\n                  multiline\r\n                  rows={8}\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"outlined\"\r\n                  value={profileDetails.bio}\r\n                  onChange={(event) => {\r\n                    if (\r\n                      event.target.value.split(\" \").filter(function (n) {\r\n                        return n != \"\";\r\n                      }).length <= 250\r\n                    ) {\r\n                      handleInput(\"bio\", event.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <PhoneInput\r\n                  country={\"in\"}\r\n                  value={phone}\r\n                  onChange={(phone) => setPhone(phone)}\r\n                  style={{ width: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Snackbar, Slide } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst MessagePopup = (props) => {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\r\n      <Alert onClose={handleClose} severity={props.severity}>\r\n        {props.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default MessagePopup;\r\n","import { createContext, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport Login from \"./component/Login\";\r\nimport Logout from \"./component/Logout\";\r\nimport Signup from \"./component/Signup\";\r\nimport Home from \"./component/Home\";\r\nimport Applications from \"./component/Applications\";\r\nimport Profile from \"./component/Profile\";\r\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\r\nimport MyJobs from \"./component/recruiter/MyJobs\";\r\nimport JobApplications from \"./component/recruiter/JobApplications\";\r\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\r\nimport RecruiterProfile from \"./component/recruiter/Profile\";\r\nimport MessagePopup from \"./lib/MessagePopup\";\r\nimport isAuth, { userType } from \"./lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"98vh\",\r\n    paddingTop: \"64px\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const SetPopupContext = createContext();\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [popup, setPopup] = useState({\r\n    open: false,\r\n    severity: \"\",\r\n    message: \"\",\r\n  });\r\n  return (\r\n    <BrowserRouter>\r\n      <SetPopupContext.Provider value={setPopup}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item xs>\r\n            <Navbar />\r\n          </Grid>\r\n          <Grid item className={classes.body}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Welcome />\r\n              </Route>\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route exact path=\"/logout\">\r\n                <Logout />\r\n              </Route>\r\n              <Route exact path=\"/home\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/applications\">\r\n                <Applications />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                {userType() === \"recruiter\" ? (\r\n                  <RecruiterProfile />\r\n                ) : (\r\n                  <Profile />\r\n                )}\r\n              </Route>\r\n              <Route exact path=\"/addjob\">\r\n                <CreateJobs />\r\n              </Route>\r\n              <Route exact path=\"/myjobs\">\r\n                <MyJobs />\r\n              </Route>\r\n              <Route exact path=\"/job/applications/:jobId\">\r\n                <JobApplications />\r\n              </Route>\r\n              <Route exact path=\"/employees\">\r\n                <AcceptedApplicants />\r\n              </Route>\r\n              <Route>\r\n                <ErrorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n        <MessagePopup\r\n          open={popup.open}\r\n          setOpen={(status) =>\r\n            setPopup({\r\n              ...popup,\r\n              open: status,\r\n            })\r\n          }\r\n          severity={popup.severity}\r\n          message={popup.message}\r\n        />\r\n      </SetPopupContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}